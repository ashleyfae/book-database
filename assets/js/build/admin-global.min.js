/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./assets/js/src/admin/global.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/js/src/admin/global.js":
/*!***************************************!*\
  !*** ./assets/js/src/admin/global.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_dashboard_widgets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/dashboard-widgets */ "./assets/js/src/admin/modules/dashboard-widgets.js");
/* harmony import */ var _modules_post_metabox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/post-metabox */ "./assets/js/src/admin/modules/post-metabox.js");
/**
 * Admin Global Scripts
 *
 * We have a separate file here because this one is loaded on non-BDB pages and we want
 * to avoid loading *all* our plugin JS on such "public" pages like that.
 *
 * @package book-database
 * @copyright Copyright (c) 2019, Ashley Gibson
 * @license GPL2+
 */



(function ($) {
  _modules_dashboard_widgets__WEBPACK_IMPORTED_MODULE_0__["BDB_Dashboard_Widgets"].init();
  _modules_post_metabox__WEBPACK_IMPORTED_MODULE_1__["BDB_Post_Metabox"].init();
})(jQuery);

/***/ }),

/***/ "./assets/js/src/admin/modules/dashboard-widgets.js":
/*!**********************************************************!*\
  !*** ./assets/js/src/admin/modules/dashboard-widgets.js ***!
  \**********************************************************/
/*! exports provided: BDB_Dashboard_Widgets */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BDB_Dashboard_Widgets", function() { return BDB_Dashboard_Widgets; });
/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! utils */ "./assets/js/src/utils/index.js");
/* global $, bdbVars, wp */

/**
 * Admin Dashboard Widgets
 */

var BDB_Dashboard_Widgets = {
  /**
   * Initialize
   */
  init: function init() {
    $('.bdb-currently-reading-widget-update-progress').on('click', this.updatePercentage);
    $('.bdb-currently-reading-progress-unit-choices').on('click', 'a', this.setUnit);
    $('.bdb-currently-reading-widget-save-progress').on('click', this.saveProgress);
    $('.bdb-currently-reading-set-progress-wrap').on('keydown', 'input', this.saveProgressOnEnter);
    $('.bdb-currently-reading-widget-finish-book').on('click', this.finishBook);
    $('.bdb-currently-reading-widget-dnf-book').on('click', this.dnfBook);
    $('.bdb-currently-reading-widget-set-rating').on('click', this.setRating);
  },

  /**
   * Update the percentage
   *
   * @param e
   */
  updatePercentage: function updatePercentage(e) {
    e.preventDefault();
    var wrap = $(this).closest('li');
    wrap.find('.bdb-currently-reading-set-progress-wrap').slideToggle();
  },

  /**
   * Set the unit to use for updating progress
   *
   * @param e
   */
  setUnit: function setUnit(e) {
    e.preventDefault();
    var wrap = $(this).closest('.bdb-currently-reading-set-progress-wrap'),
        unit = $(this).data('unit');
    wrap.find('.bdb-currently-reading-progress-unit-choices a').removeClass('bdb-currently-reading-progress-unit-selected');
    $(this).addClass('bdb-currently-reading-progress-unit-selected');

    if ('page' === unit) {
      wrap.find('.bdb-currently-reading-unit-percentage-wrap').hide();
      wrap.find('.bdb-currently-reading-unit-pages-wrap').show();
    } else {
      wrap.find('.bdb-currently-reading-unit-percentage-wrap').show();
      wrap.find('.bdb-currently-reading-unit-pages-wrap').hide();
    }
  },

  /**
   * Save the new progress
   *
   * @param e
   */
  saveProgress: function saveProgress(e) {
    e.preventDefault();
    var button = $(this),
        wrap = button.closest('li'),
        logID = wrap.data('log-id'),
        unit = wrap.find('.bdb-currently-reading-progress-unit-selected').data('unit'),
        percentage = 0,
        readablePercentage,
        progressWrap = wrap.find('.bdb-currently-reading-progress-bar'),
        progressNumber = wrap.find('.bdb-currently-reading-progress-number');
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["spinButton"])(button); // Figure out the percentage.

    if ('page' === unit) {
      var pageField = wrap.find('.bdb-currently-reading-unit-page'),
          maxPages = parseInt(pageField.data('max')),
          currentPage = parseInt(pageField.val());

      if (maxPages > 0) {
        percentage = currentPage / maxPages;
        readablePercentage = Math.round(percentage * 100);
      }
    } else {
      var percentageField = wrap.find('.bdb-currently-reading-unit-percentage');
      readablePercentage = parseFloat(percentageField.val());

      if (readablePercentage > 0) {
        percentage = readablePercentage / 100;
      }
    }

    var args = {
      percentage_complete: percentage
    };
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/reading-log/update/' + logID, args, 'POST').then(function (apiResponse) {
      progressWrap.css('width', readablePercentage + '%');
      progressNumber.text(readablePercentage + '%');
    }).catch(function (errorMessage) {
      console.log(errorMessage);
    }).finally(function () {
      Object(utils__WEBPACK_IMPORTED_MODULE_0__["unspinButton"])(button);
      wrap.find('.bdb-currently-reading-set-progress-wrap').slideUp();
    });
  },

  /**
   * Trigger progress saving when clicking "enter"
   *
   * @param e
   */
  saveProgressOnEnter: function saveProgressOnEnter(e) {
    if (13 === e.keyCode) {
      e.preventDefault();
      $(this).closest('li').find('.bdb-currently-reading-widget-save-progress').trigger('click');
    }
  },

  /**
   * Finish a book
   *
   * This sets the percentage to 100% and the finished date to today.
   *
   * @param e
   */
  finishBook: function finishBook(e) {
    e.preventDefault();

    if (!confirm(bdbVars.confirm_finish_book)) {
      return false;
    }

    var button = $(this);
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["spinButton"])(button);
    var wrap = button.closest('li');
    var args = {
      percentage_complete: 1,
      date_finished: wrap.data('now')
    };
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/reading-log/update/' + wrap.data('log-id'), args, 'POST').then(function (apiResponse) {
      wrap.find('.bdb-currently-reading-data').remove();
      wrap.find('.bdb-currently-reading-rate-book').show();
    }).catch(function (errorMessage) {
      console.log(errorMessage);
    }).finally(function () {
      Object(utils__WEBPACK_IMPORTED_MODULE_0__["unspinButton"])(button);
    });
  },

  /**
   * DNF book
   *
   * @param e
   * @returns {boolean}
   */
  dnfBook: function dnfBook(e) {
    e.preventDefault();

    if (!confirm(bdbVars.confirm_dnf_book)) {
      return false;
    }

    var button = $(this);
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["spinButton"])(button);
    var wrap = button.closest('li');
    var args = {
      date_finished: wrap.data('now')
    };
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/reading-log/update/' + wrap.data('log-id'), args, 'POST').then(function (apiResponse) {
      wrap.find('.bdb-currently-reading-data').remove();
      wrap.find('.bdb-currently-reading-rate-book').show();
    }).catch(function (errorMessage) {
      console.log(errorMessage);
    }).finally(function () {
      Object(utils__WEBPACK_IMPORTED_MODULE_0__["unspinButton"])(button);
    });
  },

  /**
   * Set the rating
   *
   * @param e
   */
  setRating: function setRating(e) {
    e.preventDefault();
    var button = $(this);
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["spinButton"])(button);
    var wrap = button.closest('li');
    var args = {
      rating: wrap.find('.bdb-currently-reading-rating').val()
    };
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/reading-log/update/' + wrap.data('log-id'), args, 'POST').then(function (apiResponse) {
      wrap.find('.bdb-currently-reading-rate-book').empty().append('<p>' + Object(utils__WEBPACK_IMPORTED_MODULE_0__["getStars"])(args.rating) + '</p>');
    }).catch(function (errorMessage) {
      console.log(errorMessage);
    }).finally(function () {
      Object(utils__WEBPACK_IMPORTED_MODULE_0__["unspinButton"])(button);
    });
  }
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "jquery")))

/***/ }),

/***/ "./assets/js/src/admin/modules/dates.js":
/*!**********************************************!*\
  !*** ./assets/js/src/admin/modules/dates.js ***!
  \**********************************************/
/*! exports provided: dateUTCtoLocal, dateLocalToUTC */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateUTCtoLocal", function() { return dateUTCtoLocal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateLocalToUTC", function() { return dateLocalToUTC; });
/* global $, bdbVars, moment */
var formatMySQL = 'YYYY-MM-DD HH:mm:ss';
var formatDisplay = 'MMMM D, YYYY';
/**
 * Converts a UTC date string to local time in YYYY-mm-dd format.
 *
 * @param {string} utcDate
 * @param {string} format
 * @returns {string}
 */

function dateUTCtoLocal(utcDate) {
  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'mysql';

  if ('' === utcDate || !utcDate) {
    return '';
  }

  if ('display' === format) {
    format = formatDisplay;
  } else {
    format = formatMySQL;
  } //console.log( 'UTC Date', utcDate );


  var t = utcDate.split(/[- :]/);
  var localDate = new Date(Date.UTC(t[0], t[1] - 1, t[2], t[3] || 0, t[4] || 0, t[5] || 0));
  localDate = moment(localDate).format(format); //console.log( 'Local Date', localDate );

  return localDate;
}
/**
 * Converts a local date string to UTC in YYYY-mm-dd format.
 *
 * @param {string} localDate
 * @returns {string}
 */

function dateLocalToUTC(localDate) {
  if ('' === localDate || !localDate) {
    return '';
  } //console.log( 'Local Date', localDate );


  var t = localDate.split(/[- :]/);
  var newDate = new Date(t[0], t[1] - 1, t[2], t[3] || 0, t[4] || 0, t[5] || 0).toISOString();
  var utcDate = moment.utc(newDate).format(formatMySQL);
  console.log('UTC Date', utcDate);
  return utcDate;
}

/***/ }),

/***/ "./assets/js/src/admin/modules/post-metabox.js":
/*!*****************************************************!*\
  !*** ./assets/js/src/admin/modules/post-metabox.js ***!
  \*****************************************************/
/*! exports provided: BDB_Post_Metabox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BDB_Post_Metabox", function() { return BDB_Post_Metabox; });
/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! utils */ "./assets/js/src/utils/index.js");
/* harmony import */ var _dates__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dates */ "./assets/js/src/admin/modules/dates.js");
/* global $, bdbVars, wp */


/**
 * Post Metabox
 */

var BDB_Post_Metabox = {
  postID: 0,
  userID: 0,
  bookID: 0,
  table: false,
  tableBody: false,
  errorWrap: false,
  searchResultsWrap: false,

  /**
   * Initialize
   */
  init: function init() {
    if (!document.getElementById('bdb-post-reviews-table')) {
      return;
    }

    this.table = $('#bdb-post-reviews-table');
    this.postID = this.table.data('post-id');
    this.userID = this.table.data('user-id');
    this.tableBody = this.table.find('tbody');
    this.errorWrap = $('#bdb-post-reviews-errors');
    this.searchResultsWrap = $('#bdb-book-search-results');
    this.getReviews();
    $('#bdb-associated-review-post').on('click', this.toggleSearch);
    $('#bdb-search-book-title-author').on('keypress', this.searchBooks);
    $('#bdb-search-book-fields').on('click', 'button', this.searchBooks);
    this.searchResultsWrap.on('click', 'a', this.selectBook);
    $('#bdb-add-review').on('click', this.addReview);
    $(document).on('click', '.bdb-disassociate-review-from-post', this.disassociateReview);
    $(document).on('click', '.bdb-delete-review', this.deleteReview);
  },

  /**
   * Get the reviews associated with this post
   */
  getReviews: function getReviews() {
    var args = {
      rating_format: 'text',
      review_query: [{
        field: 'post_id',
        value: BDB_Post_Metabox.postID
      }]
    };
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/reviews', args, 'GET').then(function (response) {
      BDB_Post_Metabox.tableBody.empty();

      if (0 === response.length || 'undefined' === typeof response.length) {
        BDB_Post_Metabox.tableBody.append(wp.template('bdb-table-post-reviews-row-empty'));
      } else {
        $.each(response, function (key, review) {
          BDB_Post_Metabox.tableBody.append(wp.template('bdb-table-post-reviews-row')(review));
        });
      }
    }).catch(function (error) {
      BDB_Post_Metabox.errorWrap.empty().append(error).show();
    });
  },

  /**
   * Toggle the search fields
   *
   * @param e
   */
  toggleSearch: function toggleSearch(e) {
    e.preventDefault();
    $('#bdb-search-book-fields').slideToggle();
  },

  /**
   * Search for books
   *
   * @param e
   */
  searchBooks: function searchBooks(e) {
    if ('click' === e.type) {
      e.preventDefault();
    }

    if ('keypress' === e.type && 13 !== e.which) {
      return true;
    } else {
      e.preventDefault();
    }

    var button = $('#bdb-search-book-fields').find('button'),
        search = $('#bdb-search-book-title-author').val(),
        searchType = $('#bdb-search-book-type').val(),
        args = {};
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["spinButton"])(button);
    BDB_Post_Metabox.errorWrap.empty().hide();
    BDB_Post_Metabox.searchResultsWrap.empty();

    if ('author' === searchType) {
      args.author_query = [{
        field: 'name',
        value: search,
        operator: 'LIKE'
      }];
    } else {
      args.book_query = [{
        field: 'title',
        value: search,
        operator: 'LIKE'
      }];
    }

    Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/books', args, 'GET').then(function (apiResponse) {
      if (0 === apiResponse.length || 'undefined' === typeof apiResponse.length) {
        BDB_Post_Metabox.searchResultsWrap.append('<p>' + bdbVars.no_books + '</p>');
      } else {
        var booksHTML = '';
        $.each(apiResponse, function (key, book) {
          booksHTML = booksHTML + '<li><a href="#" data-id="' + book.id + '">' + book.title + ' ' + bdbVars.by + ' ' + book.author_name + '</a></li>';
        });
        BDB_Post_Metabox.searchResultsWrap.append('<ul>' + booksHTML + '</ul>');
      }
    }).catch(function (errorMessage) {
      BDB_Post_Metabox.errorWrap.append(errorMessage).show();
    }).finally(function () {
      Object(utils__WEBPACK_IMPORTED_MODULE_0__["unspinButton"])(button);
    });
  },

  /**
   * Select a book to review
   *
   * @param e
   */
  selectBook: function selectBook(e) {
    e.preventDefault(); // Set the book ID.

    BDB_Post_Metabox.bookID = $(this).data('id'); // Wipe the search results.

    BDB_Post_Metabox.searchResultsWrap.empty().append('<p>' + bdbVars.please_wait + '</p>');
    var args = {
      book_id: $(this).data('id')
    }; // Get reading logs.

    Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/reading-log', args, 'GET').then(function (apiResponse) {
      var logOptions = $('#bdb-review-reading-log');

      if (apiResponse.length > 0) {
        $.each(apiResponse, function (key, log) {
          logOptions.append('<option value="' + log.id + '">' + BDB_Post_Metabox.shapeLog(log) + '</option>');
        });
      } // Wipe the search results again.


      BDB_Post_Metabox.searchResultsWrap.empty(); // Show the log selection.

      $('#bdb-add-review-fields').show();
    }).catch(function (errorMessage) {
      BDB_Post_Metabox.errorWrap.append(errorMessage).show();
    });
  },

  /**
   * Shape the reading log entry for display in an `<option>`
   *
   * @param {object} readingLog
   * @returns {string}
   */
  shapeLog: function shapeLog(readingLog) {
    readingLog.date_started_formatted = Object(_dates__WEBPACK_IMPORTED_MODULE_1__["dateUTCtoLocal"])(readingLog.date_started, 'display');
    readingLog.date_finished_formatted = Object(_dates__WEBPACK_IMPORTED_MODULE_1__["dateUTCtoLocal"])(readingLog.date_finished, 'display');
    readingLog.rating = null === readingLog.rating ? null : parseFloat(readingLog.rating) + ' ' + bdbVars.stars;

    if (!readingLog.date_started_formatted) {
      readingLog.date_started_formatted = '(' + bdbVars.unknown + ')';
    }

    if (!readingLog.date_finished_formatted) {
      readingLog.date_finished_formatted = '(' + bdbVars.unknown + ')';
    }

    return readingLog.date_started_formatted + ' - ' + readingLog.date_finished_formatted + ' (' + readingLog.rating + ')';
  },

  /**
   * Add a new review
   *
   * @param e
   */
  addReview: function addReview(e) {
    e.preventDefault();
    var button = $(this);
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["spinButton"])(button);
    var args = {
      book_id: BDB_Post_Metabox.bookID,
      reading_log_id: $('#bdb-review-reading-log').val(),
      user_id: BDB_Post_Metabox.userID,
      post_id: BDB_Post_Metabox.postID
    };
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/review/add', args, 'POST').then(function (apiResponse) {
      var args = {
        rating_format: 'text',
        review_query: [{
          field: 'id',
          value: apiResponse.id
        }]
      };
      return Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/reviews', args, 'GET');
    }).then(function (apiResponse) {
      // Add the review(s) to the table.
      $.each(apiResponse, function (key, review) {
        $('#bdb-no-post-reviews').remove();
        BDB_Post_Metabox.tableBody.append(wp.template('bdb-table-post-reviews-row')(review));
      }); // Hide the log selection.

      $('#bdb-add-review-fields').hide();
    }).catch(function (errorMessage) {
      BDB_Post_Metabox.errorWrap.append(errorMessage).show();
    }).finally(function () {
      Object(utils__WEBPACK_IMPORTED_MODULE_0__["unspinButton"])(button);
    });
  },

  /**
   * Disassociate a review from this post
   *
   * @param e
   * @returns {boolean}
   */
  disassociateReview: function disassociateReview(e) {
    e.preventDefault();

    if (!confirm(bdbVars.confirm_remove_review_association)) {
      return false;
    }

    var button = $(this);
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["spinButton"])(button);
    BDB_Post_Metabox.errorWrap.empty().hide();
    var wrap = button.closest('tr');
    var args = {
      post_id: null
    };
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/review/update/' + wrap.data('id'), args, 'POST').then(function (apiResponse) {
      wrap.remove();
    }).catch(function (errorMessage) {
      BDB_Post_Metabox.errorWrap.append(errorMessage).show();
    }).finally(function () {
      Object(utils__WEBPACK_IMPORTED_MODULE_0__["unspinButton"])(button);
    });
  },

  /**
   * Delete a review
   *
   * @param e
   * @returns {boolean}
   */
  deleteReview: function deleteReview(e) {
    e.preventDefault();

    if (!confirm(bdbVars.confirm_delete_review)) {
      return false;
    }

    var button = $(this);
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["spinButton"])(button);
    BDB_Post_Metabox.errorWrap.empty().hide();
    var wrap = button.closest('tr');
    var args = {
      post_id: null
    };
    Object(utils__WEBPACK_IMPORTED_MODULE_0__["apiRequest"])('v1/review/delete/' + wrap.data('id'), args, 'DELETE').then(function (apiResponse) {
      wrap.remove();
    }).catch(function (errorMessage) {
      BDB_Post_Metabox.errorWrap.append(errorMessage).show();
    }).finally(function () {
      Object(utils__WEBPACK_IMPORTED_MODULE_0__["unspinButton"])(button);
    });
  }
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "jquery")))

/***/ }),

/***/ "./assets/js/src/utils/api-request.js":
/*!********************************************!*\
  !*** ./assets/js/src/utils/api-request.js ***!
  \********************************************/
/*! exports provided: apiRequest, ajaxRequest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function($) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "apiRequest", function() { return apiRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ajaxRequest", function() { return ajaxRequest; });
/* global $, bdbVars, ajaxurl */

/**
 * Make a request to the REST API
 *
 * @param {string} endpoint
 * @param {object} data
 * @param {string} method
 * @returns {Promise}
 */
function apiRequest(endpoint) {
  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'POST';
  var options = {
    method: method,
    url: bdbVars.api_base + 'book-database/' + endpoint,
    beforeSend: function beforeSend(xhr) {
      xhr.setRequestHeader('X-WP-Nonce', bdbVars.api_nonce);
    },
    xhrFields: {
      withCredentials: true
    },
    data: data
  }; //console.log( 'API endpoint', endpoint );

  return new Promise(function (resolve, reject) {
    $.ajax(options).success(function (response) {
      //console.log( 'Success response', response );
      resolve(response);
    }).error(function (qpXHR, textStatus, errorThrown) {
      var error = bdbVars.generic_erroc;

      if ('undefined' !== typeof qpXHR.responseJSON) {
        error = qpXHR.responseJSON;

        if ('undefined' !== typeof error.message) {
          error = error.message;
        }
      } else if ('undefined' !== typeof qpXHR.message) {
        error = qpXHR.message;
      }

      reject(error);
    });
  });
}
/**
 * Make an ajax request
 *
 * @param {object} args
 * @returns {Promise}
 */

function ajaxRequest(args) {
  var options = {
    method: 'POST',
    dataType: 'JSON',
    url: ajaxurl,
    data: args
  };
  return new Promise(function (resolve, reject) {
    $.ajax(options).success(function (response) {
      if (!response.success) {
        //console.log( 'Error response', response );
        reject(response.data);
      } else {
        //console.log( 'Success response', response );
        resolve(response.data);
      }
    }).error(function (qpXHR, textStatus, errorThrown) {
      var error = bdbVars.generic_erroc;

      if ('undefined' !== typeof qpXHR.responseJSON) {
        error = qpXHR.responseJSON;

        if ('undefined' !== typeof error.message) {
          error = error.message;
        }
      } else if ('undefined' !== typeof qpXHR.message) {
        error = qpXHR.message;
      }

      reject(error);
    });
  });
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ "jquery")))

/***/ }),

/***/ "./assets/js/src/utils/index.js":
/*!**************************************!*\
  !*** ./assets/js/src/utils/index.js ***!
  \**************************************/
/*! exports provided: apiRequest, ajaxRequest, spinButton, unspinButton, getStars */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _api_request_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request.js */ "./assets/js/src/utils/api-request.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "apiRequest", function() { return _api_request_js__WEBPACK_IMPORTED_MODULE_0__["apiRequest"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ajaxRequest", function() { return _api_request_js__WEBPACK_IMPORTED_MODULE_0__["ajaxRequest"]; });

/* harmony import */ var _loaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loaders.js */ "./assets/js/src/utils/loaders.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "spinButton", function() { return _loaders_js__WEBPACK_IMPORTED_MODULE_1__["spinButton"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "unspinButton", function() { return _loaders_js__WEBPACK_IMPORTED_MODULE_1__["unspinButton"]; });

/* harmony import */ var _ratings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ratings.js */ "./assets/js/src/utils/ratings.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getStars", function() { return _ratings_js__WEBPACK_IMPORTED_MODULE_2__["getStars"]; });





/***/ }),

/***/ "./assets/js/src/utils/loaders.js":
/*!****************************************!*\
  !*** ./assets/js/src/utils/loaders.js ***!
  \****************************************/
/*! exports provided: spinButton, unspinButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spinButton", function() { return spinButton; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unspinButton", function() { return unspinButton; });
/* global $, bdbVars */

/**
 * Spin a button
 *
 *      - Disables the button
 *      - Saves the current button text to `data-text`
 *      - Changes the text to either a WP-Admin spinner or "Please Wait..."
 *
 * @param button
 */
function spinButton(button) {
  var newText = bdbVars.is_admin ? '<span class="spinner is-active"></span>' : bdbVars.please_wait;
  button.prop('disabled', true).data('text', button.text()).html(newText);
}
/**
 * Unspin a button
 *
 *      - Enables teh button
 *      - Sets the text to the `data-text` attribute value
 *
 * @param button
 */

function unspinButton(button) {
  button.prop('disabled', false).text(button.data('text'));
}

/***/ }),

/***/ "./assets/js/src/utils/ratings.js":
/*!****************************************!*\
  !*** ./assets/js/src/utils/ratings.js ***!
  \****************************************/
/*! exports provided: getStars */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStars", function() { return getStars; });
/* global $, bdbVars */

/**
 * Convert a numberical star rating into HTML stars
 *
 * @param rating
 * @returns {string}
 */
function getStars(rating) {
  var html = '';
  var fullStars = Math.floor(rating);
  var halfStars = Math.ceil(rating - fullStars);
  var fullStarString = '&starf;';
  var halfStarString = '&half;';
  html += fullStarString.repeat(fullStars);
  html += halfStarString.repeat(halfStars);
  return html;
}

/***/ }),

/***/ "jquery":
/*!*************************!*\
  !*** external "jQuery" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = jQuery;

/***/ })

/******/ });
//# sourceMappingURL=admin-global.min.js.map